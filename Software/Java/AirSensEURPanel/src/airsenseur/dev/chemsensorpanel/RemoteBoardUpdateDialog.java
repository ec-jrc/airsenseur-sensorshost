/* ===========================================================================
 * Copyright 2015 EUROPEAN UNION
 *
 * Licensed under the EUPL, Version 1.1 or subsequent versions of the
 * EUPL (the "License"); You may not use this work except in compliance
 * with the License. You may obtain a copy of the License at
 * http://ec.europa.eu/idabc/eupl
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Date: 02/04/2015
 * Authors:
 * - Michel Gerboles, michel.gerboles@jrc.ec.europa.eu, 
 *   Laurent Spinelle, laurent.spinelle@jrc.ec.europa.eu and 
 *   Alexander Kotsev, alexander.kotsev@jrc.ec.europa.eu:
 *			European Commission - Joint Research Centre, 
 * - Marco Signorini, marco.signorini@liberaintentio.com
 *
 * ===========================================================================
 */

package airsenseur.dev.chemsensorpanel;

import airsenseur.dev.comm.CommProtocolHelper;
import airsenseur.dev.json.ChemSensorClient;
import airsenseur.dev.json.RawCommand;
import java.util.ArrayList;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author marco
 */
public class RemoteBoardUpdateDialog extends javax.swing.JDialog {
    

    /**
     * Creates new form RemoteBoardDialog
     * @param parent
     * @param modal
     */
    public RemoteBoardUpdateDialog(ChemSensorPanel parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextBoardHost = new javax.swing.JTextField();
        jButtonUpload = new javax.swing.JButton();
        jProgressBar = new javax.swing.JProgressBar();
        jLabelStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Remote Board Upload Configuration");
        setResizable(false);

        jLabel1.setText("Remote board address:");

        jTextBoardHost.setText("192.168.100.1");

        jButtonUpload.setText("Upload");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });

        jLabelStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelStatus.setText("?");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonUpload)
                .addGap(144, 144, 144))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextBoardHost, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextBoardHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButtonUpload)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelStatus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed
        
        jProgressBar.setValue(0);
        jButtonUpload.setEnabled(false);
        
        Timer timer = new Timer();
        timer.schedule(new TimerTask() {

            @Override
            public void run() {
                updateThreadLoop();
            }
        }, 100);
    }//GEN-LAST:event_jButtonUploadActionPerformed

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b);
        
        jButtonUpload.setEnabled(true);
        jLabelStatus.setText("");
        jProgressBar.setValue(0);
    }
    
    private void updateThreadLoop() {
        
        // Ask parent for current configuration
        List<CommProtocolHelper.DataMessage> currentConfig = ((ChemSensorPanel)getParent()).getCurrentConfiguration(true);
        
        // Retrieve board info
        String host = jTextBoardHost.getText();
        int port = 8000;
        
        jProgressBar.setMaximum(0);
        jProgressBar.setMaximum(currentConfig.size()+1);
        
        // Try to connect to the remote host
        jLabelStatus.setText("Connecting");
        ChemSensorClient dataCollector = new ChemSensorClient();
        if (!dataCollector.connect(host, port)) {
            jLabelStatus.setText("Error connecting to the remote board");
            jButtonUpload.setEnabled(true);
            return;
        }
        
        int progress = 1;
        jProgressBar.setValue(progress);
        
        for(CommProtocolHelper.DataMessage message : currentConfig) {
            
            RawCommand cmd = new RawCommand(message.getCommandString(), message.getCommandComment());
            List<RawCommand> rawData = new ArrayList<>();
            rawData.add(cmd);
            
            dataCollector.sendRawData(rawData);
            
            jProgressBar.setValue(progress++);
            jLabelStatus.setText(message.getCommandComment());     
            
            try {
                Thread.sleep(250);
            } catch (InterruptedException ex) {
                
                dataCollector.disconnect();
                jLabelStatus.setText("Cancelled");
                jButtonUpload.setEnabled(true);
                return;
            }
        }
        
        jProgressBar.setValue(progress);
        jLabelStatus.setText("Completed");
        
        dataCollector.disconnect();        
        
        jButtonUpload.setEnabled(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JTextField jTextBoardHost;
    // End of variables declaration//GEN-END:variables
}
