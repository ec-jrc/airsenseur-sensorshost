/* ===========================================================================
 * Copyright 2015 EUROPEAN UNION
 *
 * Licensed under the EUPL, Version 1.1 or subsequent versions of the
 * EUPL (the "License"); You may not use this work except in compliance
 * with the License. You may obtain a copy of the License at
 * http://ec.europa.eu/idabc/eupl
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Date: 02/04/2015
 * Authors:
 * - Michel Gerboles, michel.gerboles@jrc.ec.europa.eu, 
 *   Laurent Spinelle, laurent.spinelle@jrc.ec.europa.eu and 
 *   Alexander Kotsev, alexander.kotsev@jrc.ec.europa.eu:
 *			European Commission - Joint Research Centre, 
 * - Marco Signorini, marco.signorini@liberaintentio.com
 *
 * ===========================================================================
 */

package airsenseur.dev.chemsensorpanel.widgets;

import airsenseur.dev.chemsensorpanel.SampleLogger;
import airsenseur.dev.comm.AppDataMessage;
import airsenseur.dev.exceptions.SensorBusException;

/**
 *
 * @author marco
 */
public class TextBasedSampleLoggerPanelLite extends SampleLogger {
    
    private String units = "";

    /**
     * Creates new form TextBasedSampleLoggerPanel
     */
    public TextBasedSampleLoggerPanelLite() {
        initComponents();
    }
    
    @Override
    public void setLoggerProperties(String title, int minVal, int maxVal, int historyLength) {
        
        jLblTitle.setText(title);
    }

    @Override
    public void readFromBoard() throws SensorBusException {
        super.readFromBoard(); 
       
        // Ask for name
        shieldProtocolLayer.renderSensorInquiry(boardId, sensorId);
        
        // Ask for the sensor units
        shieldProtocolLayer.renderReadUnits(boardId, sensorId);
    }

    @Override
    public void evaluateRxMessage(AppDataMessage rxMessage) {
        super.evaluateRxMessage(rxMessage);
        
        // Setup name
        String setupName = shieldProtocolLayer.evalSensorInquiry(rxMessage, boardId, sensorId);
        if ((setupName != null) && !setupName.isEmpty()) {
            jLblTitle.setText(setupName);
        }
        
        // Units
        String _units = shieldProtocolLayer.evalReadUnits(rxMessage, boardId, sensorId);
        if ((_units != null) && !_units.isEmpty()) {
            units = _units;
        }        
    }

    @Override
    protected double onNewSample(double sample, int timestamp) {
        sample = super.onNewSample(sample, timestamp);
        
        String newSample = formatSample(sample) + " " + units;
        jLblValue.setText(newSample);
        
        return sample;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLblValue = new javax.swing.JLabel();
        jLblTitle = new javax.swing.JLabel();

        jLblValue.setText("n/a");

        jLblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblTitle.setText("--");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLblValue, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblTitle)
                    .addComponent(jLblValue))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLblTitle;
    private javax.swing.JLabel jLblValue;
    // End of variables declaration//GEN-END:variables
}
