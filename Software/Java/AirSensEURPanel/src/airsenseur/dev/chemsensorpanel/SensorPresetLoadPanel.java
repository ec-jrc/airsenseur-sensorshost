/* ===========================================================================
 * Copyright 2015 EUROPEAN UNION
 *
 * Licensed under the EUPL, Version 1.1 or subsequent versions of the
 * EUPL (the "License"); You may not use this work except in compliance
 * with the License. You may obtain a copy of the License at
 * http://ec.europa.eu/idabc/eupl
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Date: 02/04/2015
 * Authors:
 * - Michel Gerboles, michel.gerboles@jrc.ec.europa.eu, 
 *   Laurent Spinelle, laurent.spinelle@jrc.ec.europa.eu and 
 *   Alexander Kotsev, alexander.kotsev@jrc.ec.europa.eu:
 *			European Commission - Joint Research Centre, 
 * - Marco Signorini, marco.signorini@liberaintentio.com
 *
 * ===========================================================================
 */

package airsenseur.dev.chemsensorpanel;

import airsenseur.dev.chemsensorpanel.widgets.PresetDrivenPanel;
import airsenseur.dev.chemsensorpanel.dataModel.SensorPresetsDataModel;
import airsenseur.dev.chemsensorpanel.exceptions.PresetException;
import airsenseur.dev.chemsensorpanel.sensorsdb.PresetDao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author marco
 */
public class SensorPresetLoadPanel extends javax.swing.JPanel {
    
    private final List<PresetDrivenPanel> presetDrivenPanels = new ArrayList<>();

    /**
     * Creates new form SensorPresetPanel
     */
    public SensorPresetLoadPanel() {
        initComponents();
    }
    
    public void registerPresetDrivenPanel(PresetDrivenPanel panel) {
        presetDrivenPanels.add(panel);
    }
    
    public void onSensorPresetDatabaseChanged() {
        try {
            sensorPresetsDataModel = new SensorPresetsDataModel();
            jComboBoxPresets.setModel(sensorPresetsDataModel);            
        } catch (PresetException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        try {
            sensorPresetsDataModel = new airsenseur.dev.chemsensorpanel.dataModel.SensorPresetsDataModel();
        } catch (airsenseur.dev.chemsensorpanel.exceptions.PresetException e1) {
            e1.printStackTrace();
        }
        jComboBoxPresets = new javax.swing.JComboBox();
        jButtonLoad = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jComboBoxPresets.setModel(sensorPresetsDataModel);

        jButtonLoad.setText("Load");
        jButtonLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadActionPerformed(evt);
            }
        });

        jLabel1.setText("Preset:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxPresets, 0, 204, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxPresets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLoad)
                    .addComponent(jLabel1)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadActionPerformed
        
        // Retrieve current selected preset
        Object selected = jComboBoxPresets.getSelectedItem();
        if ((selected != null) && (selected instanceof PresetDao)) {
            
            PresetDao preset = (PresetDao)selected;
            
            for (PresetDrivenPanel panel : presetDrivenPanels) {
                try {
                    panel.loadPresetValues(preset.getValues());
                } catch (PresetException ex) {
                    JOptionPane.showMessageDialog(this, ex.getErrorMessage(), "Load Preset", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_jButtonLoadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLoad;
    private javax.swing.JComboBox jComboBoxPresets;
    private javax.swing.JLabel jLabel1;
    private airsenseur.dev.chemsensorpanel.dataModel.SensorPresetsDataModel sensorPresetsDataModel;
    // End of variables declaration//GEN-END:variables
}
